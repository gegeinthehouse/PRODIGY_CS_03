import re

def assess_password_strength(password):
    # Criteria definitions
    criteria = [
        ("Length at least 8 characters", lambda pwd: len(pwd) >= 8),
        ("Contains uppercase letters", lambda pwd: bool(re.search(r'[A-Z]', pwd))),
        ("Contains lowercase letters", lambda pwd: bool(re.search(r'[a-z]', pwd))),
        ("Contains numbers", lambda pwd: bool(re.search(r'[0-9]', pwd))),
        ("Contains special characters", lambda pwd: bool(re.search(r'[\W_]', pwd)))
    ]

    # Assessing password based on criteria
    feedback = []
    strength_score = 0

    for description, test in criteria:
        if test(password):
            feedback.append(f"✓ {description}")
            strength_score += 1
        else:
            feedback.append(f"✗ {description}")

    # Determining the strength of the password
    if strength_score == 5:
        strength = "Strong"
    elif 3 <= strength_score < 5:
        strength = "Moderate"
    else:
        strength = "Weak"

    return strength, feedback

def main():
    print("Password Strength Checker")
    password = input("Enter your password: ")
    
    strength, feedback = assess_password_strength(password)
    
    print("\nPassword Strength: ", strength)
    print("Feedback:")
    for comment in feedback:
        print(comment)

if __name__ == "__main__":
    main()
